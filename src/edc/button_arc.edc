 group { name: "e/widgets/button";
   images.image: "bg-rounded-3px.png" COMP;
   images.image: "border-rounded-3px.png" COMP;
   images.image: "button_focus_arc.png" COMP;
#define PRESSED 1
#define HOVER   2
   script {
      public btmode;
      public eval_mode(m) {
         new p = m & PRESSED;
         new h = m & HOVER;
         if (!p) {
            if (!h) {
               // set_state(PART:"base", "default", 0.0);
               run_program(PROGRAM:"set_base_default");
            }
            else {
               // set_state(PART:"base", "hover", 0.0);
               run_program(PROGRAM:"set_base_hover");
            }
           }
         else {
              set_state(PART:"base", "pressed", 0.0);
         }
      }
   }
   parts {
      image { "base";
         desc { "default";

            image.normal: "bg-rounded-3px.png";
            image.border: 4 4 3 5;
            image.middle: SOLID;
            rel1.offset: 4 6;
            rel2.offset: -5 -1;
            fill.smooth: 0;
            color_class: "button_bg";

         }
         desc { "pressed";
            inherit: "default" ;
            color_class: "button_bg_pressed";
         }
         desc { "hover";
            inherit: "default";
            color_class: "button_bg_hover";
         }
         desc { "disabled";
            inherit: "default";
            color_class: "button_bg_disabled";
         }
         desc { "hidden";
            inherit: "default";
            visible: 0;
         }
      }
      image { "border";
         desc { "default";

            image.normal: "border-rounded-3px.png";
            image.border: 3 3 3 3;
            image.middle: 0;
            rel.to: "base";
            // rel1.offset: 1 1;
            // rel2.offset: -1 -1;
            fill.smooth: 0;
            color_class: "button_border";

         }
      }
      part { name: "icon_clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      image { name: "outline"; mouse_events: 0;
         desc { state: "default" 0.0;
            visible: 0;
            image {
               normal: "button_focus_arc.png";
               border: 3 3 3 3;
               border_scale_by: 0.5;
               middle: NONE;
            }
            rel1 {
               to: "base";
               offset: 3 3;
            }
            rel2 {
               to: "base";
               offset: -4 -4;
            }
         }
         desc { state: "focused";
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "e.swallow.icon"; type: SWALLOW; mouse_events: 0;
         clip_to: "icon_clip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.offset: 6 5;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 6 -8;
            rel2.to: "base";
         }
         description { state: "combo" 0.0;
            inherit: "default" 0.0;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
         }
         description { state: "combo_vert" 0.0;
            align: 0.5 0.0;
            rel1.offset: 6 5;
            rel1.to: "base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -7 -1;
            rel2.to_x: "base";
            rel2.to_y: "e.text.label";
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
         }
         description { state: "icon" 0.0;
            inherit: "default" 0.0;
            min: 17 17;
            aspect: 1.0 1.0; aspect_preference: BOTH;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
         }
      }
      part { name: "label_clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "e.text.label"; type: TEXT; mouse_events: 0;
         scale: 1;
         clip_to: "label_clip";
         description { state: "default" 0.0;
            rel1.offset: 6 5;
            rel1.to_x: "base";
            rel1.to_y: "base";
            rel2.offset: -7 -7;
            rel2.to: "base";
            color_class: "button_text";
            color3: 255 255 255 255;
            text { font: FN; size: FNSIZE;
               min: 1 1;
               ellipsis: -1;
               align: 0.5 0.5;
               text_class: "button";
               text: "";
            }
         }
         description { state: "combo" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 5;
            rel1.to_x: "e.swallow.icon";
         }
         description { state: "combo_vert" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.offset: 6 -7;
            rel1.to: "base";
            rel2.offset: -7 -7;
            rel2.to: "base";
            align: 0.5 1.0;

         }
         description { state: "icon" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "label2"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "e.text.label";
            rel2.to: "e.text.label";
            color_class: "button_text_disabled";
            color3: 255 255 255 255;
            text { font: FN; size: FNSIZE;
               text_source: "e.text.label";
               align: 0.5 0.5;
               text_class: "button";
            }
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "base2"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
         }
      }
      part { name: "event"; type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,in"; source: "event";
         action: SIGNAL_EMIT "elm,action,move_in" "elm";
         after: "hoverin";
      }
      program {name: "hoverin";
         script {
            new m = get_int(btmode);
            m |= HOVER ; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program {
         signal: "mouse,out"; source: "event";
         action: SIGNAL_EMIT "elm,action,move_out" "elm";
         after: "hoverout";
      }
      program {name: "hoverout";
         script {
            new m = get_int(btmode);
            m &= ~HOVER; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_click_anim";
         script {
            new m = get_int(btmode);
            m |= PRESSED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_unclick_anim";
         script {
            new m = get_int(btmode);
            m &= ~PRESSED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "set_base_hover";
         action: STATE_SET "hover";
         target: "base";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "set_base_default";
         action: STATE_SET "default";
         target: "base";
         transition: SINUSOIDAL 0.2;
      }
      program {
         signal: "mouse,down,1"; source: "event";
         after: "button_click_anim";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         after: "button_unclick_anim";
      }
      program {
         signal: "mouse,clicked,1*"; source: "event";
         action: SIGNAL_EMIT "e,action,click" "";
      }
      program {
         signal: "e,state,text"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.icon";
         target: "e.text.label";
      }
      program {
         signal: "e,state,icon"; source: "e";
         action: STATE_SET "icon" 0.0;
         target: "e.swallow.icon";
         target: "e.text.label";
      }
      program {
         signal: "e,state,combo"; source: "e";
         action: STATE_SET "combo" 0.0;
         target: "e.swallow.icon";
         target: "e.text.label";
      }
      program {
         signal: "e,state,combo,vert"; source: "e";
         action: STATE_SET "combo_vert" 0.0;
         target: "e.swallow.icon";
         target: "e.text.label";
      }
      program {
         signal: "e,state,disabled"; source: "e";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "icon_clip";
         target: "label_clip";
         target: "label2";
      }
      program {
         signal: "e,state,enabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "icon_clip";
         target: "label_clip";
         target: "label2";
      }
      program { signal: "e,state,focused"; source: "e";
         action: STATE_SET "focused" 0.0;
         target: "outline";
      }
      program { signal: "e,state,unfocused"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "outline";
      }
   }
}
#undef PRESSED
#undef HOVER
