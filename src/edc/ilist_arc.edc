group { name: "e/ilist";
   images.image: "darken_rounded_square.png" COMP;
   parts {
      part { name: "typebuf_clip"; type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
         description { state: "active" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "bevel"; mouse_events: 0;
         clip_to: "typebuf_clip";
         description { state: "default" 0.0;
            rel1.offset: -15 -15;
            rel1.to: "e.text.label";
            rel2.offset: 14 14;
            rel2.to: "e.text.label";
            image.normal: "darken_rounded_square.png";
            color: 255 255 255 196;
            image.border: 15 15 15 15;
            fill.smooth: 0;
         }
      }
      part { name: "e.text.label"; type: TEXT; mouse_events: 0;
         clip_to: "typebuf_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel1.offset: -8 -8;
            rel2.relative: 0.5 0.5;
            rel2.offset: 7 7;
            color_class: "ilist_item";
            text { font: FNBD; size: FNSIZE;
               min: 1 1;
               ellipsis: -1;
               align: 0.5 0.5;
               text_class: "ilist_typebuf";
            }
         }
      }
   }
   programs {
      program {
         signal: "e,state,typebuf,start"; source: "e";
         action: STATE_SET "active" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "typebuf_clip";
      }
      program {
         signal: "e,state,typebuf,stop"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "typebuf_clip";
      }
   }
}

group { name: "e/widgets/ilist";
#define SELECTED 1
#define HOVER 2
   script {
      public it_state;
      public eval_state(s) {
         if (s & SELECTED) {
            // set_state(PART:"sel_base", "selected", 0.0);
            run_program(PROGRAM:"base_selected");
         } else if (s & HOVER) {
            // set_state(PART:"sel_base", "hover", 0.0);
            run_program(PROGRAM:"base_hover");
         } else {
            // set_state(PART:"sel_base", "default", 0.0);
            run_program(PROGRAM:"base_default");
         }

      }
   }
//   data.item: "stacking" "above";
   data.item: "stacking" "below";
   data.item: "selectraise" "on";
   parts {
     part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "ilist_item_base";
         }
      }
      part { name: "sel_base"; mouse_events: 0; type: RECT;
         description { state: "default" 0.0;
            color_class: "ilist_item_base";
         }
         description { state: "selected";
            inherit: "default" 0.0;
            color_class: "ilist_item_base_selected";
         }
         description { state: "hover";
            inherit: "default";
            color_class: "ilist_item_base_hover";
         }
      }
      program {
         signal: "mouse,in"; source: "event";
         script {
            new s = get_int(it_state);
            set_int(it_state, s |= HOVER);
            eval_state(s);
         }
      }
      program {
         signal: "mouse,out"; source: "event";
         script {
            new s = get_int(it_state);
            set_int(it_state, s &= ~HOVER);
            eval_state(s);
         }
      }
      program { name: "base_selected";
         action: STATE_SET "selected" 0.0;
         target: "sel_base";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "base_hover";
         action: STATE_SET "hover" 0.0;
         target: "sel_base";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "base_default";
         action: STATE_SET "default" 0.0;
         target: "sel_base";
         transition: SINUSOIDAL 0.2;
      }
      part { name: "e.swallow.icon"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: 2 2;
            rel2.relative: 0.0 1.0;
            rel2.offset: 2 -3;
         }
      }
      part { name: "e.text.label"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 2 3;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.icon";
            rel2.offset: -3 -3;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.swallow.end";
            color_class: "ilist_item";
            text { font: FN; size: FNSIZE;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "list_item";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "ilist_item_selected";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "ilist_item_text_disabled";
         }
      }
      part { name: "e.swallow.end"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: -3 2;
            rel1.relative: 1.0 0.0;
            rel2.offset: -3 -3;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "e,state,selected"; source: "e";
         script {
            new s = get_int(it_state);
            set_int(it_state, s |= SELECTED);
            eval_state(s);
         }
      }
      program {
         signal: "e,state,unselected"; source: "e";
         script {
            new s = get_int(it_state);
            set_int(it_state, s &= ~SELECTED);
            eval_state(s);
         }
      }
      program {
         signal: "e,state,selected"; source: "e";
         action: STATE_SET "selected" 0.0;
         target: "e.text.label";
      }
      program {
         signal: "e,state,unselected"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.text.label";
      }
      program {
         signal: "e,state,disabled"; source: "e";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "e.text.label";
      }
      program {
         signal: "e,state,enabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "e.text.label";
      }
   }
}

group { name: "e/widgets/ilist_odd";
   inherit: "e/widgets/ilist";
   parts {
      part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "ilist_item_odd_base";
         }
      }
      part { name: "sel_base"; mouse_events: 0; type: RECT;
         description { state: "default" 0.0;
             color_class: "ilist_item_odd_base";
         }
         description { state: "selected";
            inherit: "default" 0.0;
            color_class: "ilist_item_base_selected";
         }
         description { state: "hover";
            inherit: "default";
            color_class: "ilist_item_base_hover";
         }
      }
   }
}

group { name: "e/widgets/ilist_header";

   data.item: "stacking" "above";
   parts {
     part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "ilist_item_header_base";
         }
      }
      part { name: "e.swallow.icon"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: 2 2;
            rel2.relative: 0.0 1.0;
            rel2.offset: 2 -3;
         }
      }
      part { name: "e.text.label"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 2 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.icon";
            rel2.offset: -3 -7;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.swallow.end";
            color_class: "ilist_item_header";
            text { font: FNBD; size: FNSIZE;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "list_item_header";
            }
         }
      }
      part { name: "e.swallow.end"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: -3 2;
            rel1.relative: 1.0 0.0;
            rel2.offset: -3 -3;
         }
      }
   }
}

group { name: "e/widgets/ilist_header_odd";
   inherit: "e/widgets/ilist_header";
     parts.part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "ilist_item_header_odd_base";
         }
      }
}

group { name: "e/widgets/ilist/toggle_end";
   images.image: "led_dark.png" COMP;
   images.image: "led_light.png" COMP;
   parts {
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "led_dark.png";
            aspect: 1.0 1.0; aspect_preference: BOTH;
            max: 32 32;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            image.normal: "led_light.png";
         }
      }
   }
   programs {
      program {
         signal: "e,state,checked"; source: "e";
         action: STATE_SET "visible" 0.0;
         transition: BOUNCE 0.4 0.5 4;
         target: "base";
      }
      program {
         signal: "e,state,unchecked"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
   }
}

